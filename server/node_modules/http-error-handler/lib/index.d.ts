/// <reference types="express" />
import { Response, Request } from 'express';
export interface ErrorResponse {
    code: number;
    error: string;
    reason: string;
    message: string;
    details?: any[];
}
export declare const badRequest: ErrorResponse;
export declare const invalidParameter: ErrorResponse;
export declare const parseError: ErrorResponse;
export declare const requiredParameter: ErrorResponse;
export declare const authError: ErrorResponse;
export declare const requiredAuthorisation: ErrorResponse;
export declare const forbidden: ErrorResponse;
export declare const rateLimitExceeded: ErrorResponse;
export declare const sslRequired: ErrorResponse;
export declare const notFound: ErrorResponse;
export declare const internalError: ErrorResponse;
export declare const backendError: ErrorResponse;
export declare const errorHandler: (err: any, req: Request, res: Response, next?: any) => any;
export declare const errorHandlerCallback: (req: Request, res: Response, next?: any) => (err: any) => Response;
export declare const notFoundHandler: (req: Request, res: Response) => Response;
